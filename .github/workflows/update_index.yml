name: Update Blogger Index

# Controls when the action will run.
# Runs on a schedule (e.g., daily at 1 AM UTC)
# and also allows manual triggering from the Actions tab.
on:
  schedule:
    - cron: '0 1 * * *' # Runs daily at 1:00 AM UTC. Adjust as needed. https://crontab.guru/
  workflow_dispatch: # Allows manual triggering
  push: # Optional: Run when code is pushed to the main branch
    branches:
      - main # Adjust if your default branch is different (e.g., master)

jobs:
  update-index:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repository
      uses: actions/checkout@v4 # Use latest version

    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v5 # Use latest version
      with:
        python-version: '3.x' # Use a recent Python 3 version

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    # Run the Python script to generate the index
    # Ensure generate_blogger_index.py is in the root of your repo
    # and BLOG_URL is correctly set inside the script.
    - name: Run index generator script
      run: python generate_blogger_index.py

    # Commit the generated file back to the repository
    - name: Commit and push if changed
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        # Add the generated file (and potentially others if needed)
        git add blog_index.json
        # Commit only if there are changes
        # Use 'git diff --staged --quiet ||' to only commit if there are staged changes
        git diff --staged --quiet || git commit -m "Automated index update [skip ci]"
        # Push the changes back to the main branch (adjust branch name if needed)
        git push origin main # Or your default branch name (e.g., master)
      env:
        # This token is automatically provided by GitHub Actions
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
